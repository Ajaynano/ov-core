name: Angular release

on:
    workflow_call:
        inputs:
            project-name:
                type: string
                description: 'the project name'
                required: true
            version:
                type: string
                description: 'the version bump to perform'
                required: true
            version-postfix:
                type: string
                description: 'the version postfix to add to the tag'
                required: false
            tag-latest:
                type: boolean
                default: false  
                required: false

jobs:
    release-angular:
        name:   Create quaker release
        runs-on: ubuntu-latest

        steps:
            - name: checkout
              uses: actions/checkout@v3
            
            - name: Checkout ov-core-gitops
              uses: actions/checkout@v3
              with:
                repository: Ajaynano/ov-core-gitops
                token: ${{ secrets.PAT_PR }}
                path: 'ov-core-gitops'
                persist-credentials: true
                ref: 'develop'
            - name:  Build admin ui
              run: echo builing UI
            
            - name: Build container and push to dev
              id: admin-ui-dev
              if: ${{ inputs.tag-latest && github.ref == 'refs/heads/develop' }}
              run: |
                echo ${{ inputs.tag-latest }}
                echo ${{ inputs.version }}

            # - name: update dev k8 manifest
            #   id: mainfest-update
            #   if: ${{ success() && steps.admin-ui-dev.outcome == 'success' }}
            #   working-directory: ov-core-gitops
            #   run: |
            #     sed -i '/^admin-ui:/{n;s/imageVersion:.*/imageVersion:\ ${{ inputs.version }}${{ inputs.version-postfix }}/;}' ovc-app/config/envs/test/values-version.yaml
            #     git add -A
            #     git config --global user.name github-actions
            #     git config user.email github-actions@github.com
            #     git commit -m "Auto-generated by workflow. update app version to ${{ inputs.version }}-${{ github.sha }}"
            #     git push 

            # - name: Create Pull Request
            #   id: cpr
            #   if: ${{ success() && steps.mainfest-update.outcome == 'success' }}
            #   uses: peter-evans/create-pull-request@v5
            #   with:
            #     token: ${{ secrets.PAT_PR }}
            #     committer: GitHub <noreply@github.com>
            #     author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
            #     branch: develop
            #     base: main
            #     title: '[Example] Update report'
            #     body: |
            #         Update report
            #         - Updated with *today's* date
            #         - Auto-generated by [create-pull-request][1]
            #         [1]: https://github.com/peter-evans/create-pull-request
            #     labels: |
            #         report
            #         automated pr
            #     assignees: Ajaynano

            # - name: Check outputs
            #   if: ${{ steps.cpr.outputs.pull-request-number }}
            #   run: |
            #     echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
            #     echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"
            
            - name: Send pull request
              run: |
                LATEST_TAG=$(git describe --tags --always --abbrev=0)
                REPOSITORY="Ajaynano/ov-core-gitops"
                FOLDER="bin/$REPOSITORY"
                BRANCH_NAME="develop-$LATEST_TAG"
                # Clone the remote repository and change working directory to the
                # folder it was cloned to.
                git clone \
                  --depth=1 \
                  --branch=main \
                  https://Ajaynano:${{ secrets.PAT_PR }}@github.com/$REPOSITORY \
                  $FOLDER
                cd $FOLDER

                # Setup the committers identity.
                git config --global user.name github-actions
                git config user.email github-actions@github.com

                # Create a new feature branch for the changes.
                git checkout -b $BRANCH_NAME
                sed -i '/^admin-ui:/{n;s/imageVersion:.*/imageVersion:\ ${{ inputs.version }}${{ inputs.version-postfix }}/;}' ovc-app/config/envs/test/values-version.yaml
                git add .
                git commit -m "Auto-generated by workflow. update app version to ${{ github.sha }}"
                git push origin $BRANCH_NAME

                # Store the PAT in a file that can be accessed by the
                # GitHub CLI.
                echo "${{ secrets.PAT_PR }}" > token.txt
      
                # # Authorize GitHub CLI for the current repository and
                # # create a pull-requests containing the updates.
                # gh auth login --with-token < token.txt
                gh pr create \
                  --body "" \
                  --title "chore: update mainfest file" \
                  --head "$BRANCH_NAME" \
                  --base "main"
                

